name: Build and Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # 3️⃣ Install dependencies & build (if you have a build step)
      - name: Install dependencies and build
        run: |
          npm ci
          npm run build --if-present

      # 4️⃣ Create deployment archive (ignores git, node_modules, logs, etc.)
      - name: Create archive
        run: |
          tar --warning=no-file-changed \
              --exclude='.git' \
              --exclude='node_modules' \
              --exclude='.github' \
              --exclude='*.log' \
              -czf app.tar.gz .

      # 5️⃣ Copy archive to VPS
      - name: Copy files to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          source: "app.tar.gz"
          target: "~/app.tar.gz"

      # 6️⃣ Deploy and restart PM2 process on VPS
      - name: Deploy on VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            set -e

            echo "🔹 Cleaning and unpacking app..."
            cd ~
            rm -rf app || true
            mkdir app
            tar -xzf app.tar.gz -C app
            cd app

            echo "🔹 Installing production dependencies..."
            npm ci --omit=dev

            echo "🔹 Restarting PM2 process (kenuniv-api)..."
            if pm2 describe kenuniv-api > /dev/null; then
              pm2 restart kenuniv-api
            else
              pm2 start app.js --name kenuniv-api
            fi

            pm2 save
            echo "✅ Deployment completed successfully!"
